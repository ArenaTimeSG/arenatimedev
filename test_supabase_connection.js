// =====================================================
// TESTE DE CONECTIVIDADE COM SUPABASE
// Execute este script no browser console para testar
// =====================================================

const SUPABASE_URL = "https://xtufbfvrgpzqbvdfmtiy.supabase.co";
const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0dWZiZnZyZ3B6cWJ2ZGZtdGl5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3ODUzMDYsImV4cCI6MjA3MTM2MTMwNn0.kckI90iRHcw2hY_J5-tNveAzB1oD8xRT7MyM_tLDZ4M";

console.log('üîç Testando conectividade com Supabase...');

// Teste 1: Verificar se a URL est√° acess√≠vel
async function testUrlAccess() {
  try {
    console.log('üì° Testando acesso √† URL do Supabase...');
    const response = await fetch(SUPABASE_URL, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
      }
    });
    
    console.log('‚úÖ URL acess√≠vel:', response.status, response.statusText);
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao acessar URL:', error);
    return false;
  }
}

// Teste 2: Verificar se a API est√° funcionando
async function testApiAccess() {
  try {
    console.log('üîå Testando acesso √† API do Supabase...');
    const response = await fetch(`${SUPABASE_URL}/rest/v1/user_profiles?select=count`, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
        'Content-Type': 'application/json',
      }
    });
    
    console.log('‚úÖ API acess√≠vel:', response.status, response.statusText);
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao acessar API:', error);
    return false;
  }
}

// Teste 3: Verificar se as tabelas est√£o acess√≠veis
async function testTableAccess() {
  try {
    console.log('üìä Testando acesso √†s tabelas...');
    
    // Testar user_profiles
    const userResponse = await fetch(`${SUPABASE_URL}/rest/v1/user_profiles?select=*&limit=1`, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
        'Content-Type': 'application/json',
      }
    });
    
    console.log('‚úÖ user_profiles acess√≠vel:', userResponse.status);
    
    // Testar booking_clients
    const clientResponse = await fetch(`${SUPABASE_URL}/rest/v1/booking_clients?select=*&limit=1`, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
        'Content-Type': 'application/json',
      }
    });
    
    console.log('‚úÖ booking_clients acess√≠vel:', clientResponse.status);
    
    // Testar appointments
    const appointmentResponse = await fetch(`${SUPABASE_URL}/rest/v1/appointments?select=*&limit=1`, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
        'Content-Type': 'application/json',
      }
    });
    
    console.log('‚úÖ appointments acess√≠vel:', appointmentResponse.status);
    
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao acessar tabelas:', error);
    return false;
  }
}

// Executar todos os testes
async function runAllTests() {
  console.log('üöÄ Iniciando testes de conectividade...\n');
  
  const urlTest = await testUrlAccess();
  console.log('');
  
  const apiTest = await testApiAccess();
  console.log('');
  
  const tableTest = await testTableAccess();
  console.log('');
  
  if (urlTest && apiTest && tableTest) {
    console.log('üéâ Todos os testes passaram! O Supabase est√° funcionando corretamente.');
  } else {
    console.log('‚ö†Ô∏è Alguns testes falharam. Verifique a configura√ß√£o do Supabase.');
  }
}

// Executar os testes
runAllTests();
